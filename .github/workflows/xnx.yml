name: Xnx

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        #os: [ windows-latest ]

    steps:

      ################################################################################

      - uses: actions/checkout@v2
      - uses: browser-actions/setup-chrome@latest
      - uses: dart-lang/setup-dart@v1

      ################################################################################

      - name: Finalizing Dart SDK installation on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update

      ################################################################################

      - name: Installing ImageMagick on Windows
        if: runner.os == 'Windows'
        run: |
          choco install -y imagemagick.app --no-progress
          Get-ChildItem -Path "${env:ProgramFiles}" | Where-Object {($_.Name -Like 'ImageMagick*')} | %{$_.FullName} | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8

      ################################################################################

      - name: Installing dependencies
        run: dart pub get

      ################################################################################

      - name: Analyzing the project source
        run: dart analyze --fatal-infos

      ##############$PSVersionTable##################################################################

      - name: Running unit tests
        run: dart test

      ################################################################################

      - name: Building the application on a POSIX-compliant OS
        if: runner.os != 'Windows'
        run: scripts/build -k "${{ runner.os }}"

      - name: Building the application on Windows
        if: runner.os == 'Windows'
        run: scripts\build /K

      ################################################################################

      - name: Running Integration Test 1 - flutter_app_icons
        run: bin/xnx -d examples/flutter_app_icons

      ################################################################################

      - name: Running Integration Test 2 - ms_office
        run: bin/xnx -d examples/ms_office

      ################################################################################

      - name: Running Integration Test 3 - multi_conf
        run: bin/xnx -d examples/multi_conf

      ################################################################################

      - name: Running Integration Test 4 - multi_icon
        run: bin/xnx -d examples/multi_icon

      ################################################################################

      - name: Cleaning up on a POSIX-compliant OS
        if: runner.os != 'Windows'
        run: rm -f bin/xnx

      ################################################################################

      - name: Cleaning up on Windows
        if: runner.os == 'Windows'
        run: Remove-Item -Force -Path bin\xnx.exe

      ################################################################################

      - name: Pushing the new package back to the version control
        uses: EndBug/add-and-commit@v7
        with:
          message: 'Pushing the new application package back to the version control'
          add: 'app/${{ runner.os }}/* --force'

      ################################################################################
