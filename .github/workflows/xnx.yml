name: Xnx

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        #os: [ ubuntu-latest, macos-latest, windows-latest ]
        os: [ ubuntu-latest ]

    steps:

      ################################################################################

      - uses: actions/checkout@v2
      - uses: browser-actions/setup-chrome@latest
      - uses: dart-lang/setup-dart@v1

      ################################################################################

      - name: Installing ImageMagick for Windows
        if: runner.os == 'Windows'
        run: |
          choco install -y imagemagick.app --no-progress
          Get-ChildItem -Path "${env:ProgramFiles}" | Where-Object {($_.Name -Like 'ImageMagick*')} | %{$_.FullName} | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8

      ################################################################################

      - name: Installing dependencies
        run: dart pub get

      ################################################################################

      - name: Analyzing the project source
        run: dart analyze --fatal-infos

      ##############$PSVersionTable##################################################################

      - name: Running unit tests
        run: dart test

      ################################################################################

      - name: Building the application for a POSIX-compliant OS
        if: runner.os != 'Windows'
        run: scripts/build "${{runner.os}}"

      - name: Building the application for Windows
        if: runner.os == 'Windows'
        run: scripts\build

      ################################################################################

      - name: Running Integration Test 1 - flutter_app_icons
        run: |
          bin/${{runner.os}}/xnx -d examples/flutter_app_icons
          scripts/Check-FileCount.ps1 -Expected 40 -Path examples/flutter_app_icons -Include "*.png"

      ################################################################################

      - name: Running Integration Test 2 - ms_office
        run: |
          bin/${{runner.os}}/xnx -d examples/ms_office
          scripts/Check-FileCount.ps1 -Expected 12 -Path examples/ms_office/out/

      ################################################################################

      - name: Running Integration Test 3 - multi_conf
        run: |
          bin/${{runner.os}}/xnx -d examples/multi_conf
          scripts/Check-FileCount.ps1 -Expected 6 -Path examples/multi_conf/out/

      ################################################################################

      - name: Running Integration Test 4 - multi_icon
        run: |
          bin/${{runner.os}}/xnx -d examples/multi_icon
          scripts/Check-FileCount.ps1 -Expected 12 -Path examples/multi_icon/png/

      ################################################################################

      - name: Running Integration Test 5 - site_env
        run: |
          bin/${{runner.os}}/xnx -d examples/site_env
          scripts/Check-FileCount.ps1 -Expected 64 -Recurse -Path examples/site_env/ReleaseFiles/ -Include "*.txt"

      # - name: Checking Integration Test 5 - site_env - for POSIX-compliant OS
      #   if: runner.os != 'Windows'
      #   run: ls -1 examples/site_env/ReleaseFiles/au/01-dev | wc -l | grep -i "^[ \t]*4[ \t]*$"

      # - name: Checking Integration Test 5 - site_env - for Windows
      #   if: runner.os == 'Windows'
      #   run: |
      #     Get-ChildItem -Path examples\site_env\ReleaseFiles\au\01-dev
      #     (Get-ChildItem -Path examples\site_env\ReleaseFiles\au\01-dev).Count | Select-String -Quiet -Pattern "^[ \t]*4[ \t]*$"

      ################################################################################

      - name: Running Integration Test 6 - web_config
        run: |
          bin/${{runner.os}}/xnx -d examples/web_config -x ~Web.config.xnx Dev UK
          scripts/Check-FileCount.ps1 -Expected 2 -Recurse -Path examples/web_config/out/ -Include "Web*.config"

      # - name: Checking Integration Test 6 - web_config - for POSIX-compliant OS
      #   if: runner.os != 'Windows'
      #   run: ls -1 examples/web_config/out/Web.DevUK.config examples/web_config/out/uk/dev/Web.config | wc -l | grep -i "^[ \t]*2[ \t]*$"

      # - name: Checking Integration Test 6 - web_config - for Windows
      #   if: runner.os == 'Windows'
      #   run: (Get-ChildItem -Path examples\web_config\out\Web.DevUK.config,examples\web_config\out\uk\dev\Web.config).Count | Select-String -Quiet -Pattern "^[ \t]*2[ \t]*$"

      ################################################################################

      - name: Pushing the new binary to the version control
        uses: EndBug/add-and-commit@v7
        with:
          message: 'Pushing the new binary back to the version control'
          add: 'bin/${{runner.os}}/* --force'

      ################################################################################

      - name: Pushing the new application package back to the version control
        uses: EndBug/add-and-commit@v7
        with:
          message: 'Pushing the new application package back to the version control'
          add: 'app/${{runner.os}}/* --force'

      ################################################################################
