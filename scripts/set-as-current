#!/bin/bash

set -Eeo pipefail

################################################################################
# Copyright (C) Alexander Iurovetski 2021. All rights reserved
#
# The script to run after unpacking the installation archive in order to
# point to this version (the deepest-level containing sub-directory)
################################################################################

JOB_NAME="$(basename "${0}")"

################################################################################
# Show how to use this script
################################################################################

function usage() {
  local msg="${1}"

  if [[ "${msg}" != "" ]]; then
    printf "\n${msg}\n"
  fi

  cat <<EOT >&2

USAGE: <path>/${JOB_NAME} [<directory>]
NOTES: the default directory is <path> (the one containing the script)

EOT
  exit 1
}

################################################################################
# Check the arguments
################################################################################

if [[ "${1}" =~ ^(-\?|-h|--help)$ ]]; then
    usage
fi

if (( ${#} > 1 )); then
    usage "Invalid number of arguments passed: zero or one expected"
fi

################################################################################
# Get the version-specific directory as either the first argument, or as the
# script's containing directory path when no argument passed. Then check and
# remove trailing directory separator character if found
################################################################################

VER_DIR="$(echo "${1:-$(dirname "${0}")}" | sed -Ee 's/\/$//')"

################################################################################
# Get and validate the version name
################################################################################

VER_NAME="$(basename "${VER_DIR}")"

if [[ "current" == "${VER_NAME}" ]]; then
  printf "\nCannot point to itself\n"
  exit 1
fi

################################################################################
# Switch to the directory containing all version directories
################################################################################

VER_PARENT="$(dirname "${VER_DIR}")"
cd "${VER_PARENT}"

################################################################################
# Delete (if found) and create the directory link:
#
# current -> (the-actual-version)
#
# Under Linux variants and macOS, this does not require to run the script with
# the elevated (sudo) access, unless the directory is not writable to the user
################################################################################

if [[ -L current ]]; then
  rm -f current
fi

ln -s "${VER_NAME}" current || exit 1

################################################################################
# Validate and show the result
################################################################################

ls -lL current 2>&1 > /dev/null
echo "current -> ${VER_NAME}"

################################################################################
# The exit point
################################################################################
