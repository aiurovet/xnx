#!/bin/bash

################################################################################

PRJ="xnx"
OST="${1}" # OS type: Linux, macOS or Windows (default: will be calculated)
shift

################################################################################

function exitApp() {
  local ret=${1:-0}
  local msg="${2}"

  (( ${ret} != 0 )) && msg="*** ERROR: ${msg:-Build failed}"

  [[ "${msg}" != "" ]] && printf "\n%s\n\n" "${msg}"

  exit ${ret}
}

################################################################################

function realpath() {
    local old="${PWD}"

    cd "${1}" &&\
    echo "${PWD}" &&\
    cd "${old}"
}

################################################################################

APP=$(basename "${0}") || exitApp 1 "Failed to determine application name"
TOP=$(dirname "${0}") || exitApp 1 "Failed to determine top directory"
TOP=$(realpath "${TOP}/../") || exitApp 1

################################################################################

if [[ "${OST}" == "" ]]; then
    OST=$(uname -s) || exitApp 1 "Failed to retrieve OS kernel name"
fi

if [[ "${OST}" =~ "darwin" ]]; then
    OST="macOS"
fi

OST_LC=$(echo "${OST}" | tr "[:upper:]" "[:lower:]")

################################################################################

BIN="${TOP}/bin/${OST}"
SRC="${BIN}/../main.dart"

mkdir -p "${BIN}" || exitApp 1 "Failed to create directory \"${BIN}\""

EXE="${BIN}/${PRJ}"

pub get || exitApp 1 "Failed to retrieve packages"
echo "Compiling..."
dart compile exe "${SRC}" -o "${EXE}" || exitApp 1 "Failed to compile the executable \"${EXE}\""
wc -c "${EXE}" || exitApp 1 "Failed to compile the executable \"${EXE}\""
cp -pr "${TOP}/README.md" "${BIN}" || exitApp 1 "Failed to copy readme file to \"${BIN}\""
${TOP}/scripts/mkicons/mkicons "${OST}" ${@} || exitApp 1 "Failed to create app icons in \"${BIN}\""
${EXE} --zip --move "${BIN}" "${TOP}/app/${PRJ}-${OST_LC}.zip"

exitApp 0 "${APP} successfully completed"

################################################################################
