#!/bin/bash

################################################################################

function exitApp() {
  local ret=${1:0}
  local msg="${2}"

  (( ${ret} != 0 )) && msg="*** ERROR: ${msg:-Build failed}"

  [[ "${msg}" != "" ]] && printf "\n%s\n\n" "${msg}"

  exit ${ret}
}

################################################################################

[[ "${1}" == "-c" ]] && COPY_ONLY=1 || COPY_ONLY=0

APP=$(basename "${0}") || exitApp 1 "Failed to determine application name"
TOP=$(dirname $(dirname "${0}")) || exitApp 1 "Failed to determine top directory"
TOP=$(realpath "${TOP}") || exitApp 1 "Failed to get the full path of the top directory \"${TOP}\""

PRJ=$(basename "${TOP}") || exitApp 1 "Failed to retrieve project name from parent directory \"${TOP}\""

WIN_TOP="${HOME}/.wine/drive_c/users/${USER}/IdeaProjects/${PRJ}"
mkdir -p "${WIN_TOP}" || exitApp 1 "Failed to create directory \"${WIN_TOP}\""

WIN_ABV=$(dirname "${WIN_TOP}") || exitApp 1 "Failed to retrieve parent directory of \"${WIN_TOP}\""

rm -rf "${WIN_TOP}"
cp -pr "${TOP}" "${WIN_ABV}" || exitApp 1 "Failed to copy project to Windows directory"

echo "Copied the latest version to Windows directory"

if (( ${COPY_ONLY} == 0 )); then
  wine cmd /c "C:\\Users\\${USER}\\IdeaProjects\\${PRJ}\\scripts\\build" 2>&1 | grep -Piv "\\:fixme\\:|FormatMessage failed" || exitApp 1 "Failed to execute Windows build"

  rm -rf "${TOP}/bin/Windows"
  cp -pr "${WIN_TOP}/bin/Windows" "${TOP}/bin" || exitApp 1 "Failed to copy Windows build output back to the project"
fi

echo "${APP} successfully completed"
exit 0
