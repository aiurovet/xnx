// Application configuration file for xnx
// The content can be changed according to your preference
//
// When the applicatiopn starts, it first looks for a file under option -c or --config,
// then for a file with this apecific name under the current directory, then under
// the application directory

{
  // Treat a key as a regular expression if it starts with the noted prefix and ends with the noted suffix
  myKeyAsRegExp: { prefix: '/', suffix: '/', },

  // The precision to use in floating-point data and mathematical functions
  numericPrecision: 6,

  // Avoid prepending any command with shell if its first argument's basename without extension
  // represents one of the following strings. The extension is always checked as being empty or
  // under Windows, also could be '.exe' or '.com':
  shellNames: [
    'ash', 'bash', 'cmd', 'command', 'csh', 'fish', 'ion', 'ksh',
    'pdksh', 'pwsh', 'powershell', 'scsh', 'sh', 'tcsh', 'zsh',
  ],

  keywords: {
    // A key to define in this file the keyword for numeric precision
    kwNumericPrecision: 'numericPrecision',

    // A key to define in this file the keyword for keyAsRegExp property,
    kwKeyAsRegExp: 'myKeyAsRegExp',

    // Boolean flag to allow automatic content expansion to a temporary file before executing the actual command
    kwCanExpandContent: '{{-can-expand-content-}}',

    // Command or array or commands to execute; will be run only after the input and output files are defined;
    // after the execution, the output file path gets discarded; see also: run
    kwCmd: '{{-cmd-}}',

    // Current directory, can be changed explicitly, defaults to -d ... or to the start directory
    kwCurDir: '{{-cur-dir-}}',

    // Regular expression to detect key which values should be expanded to the full path
    // No need to mention here '{{-cur-dir-}}', '{{-inp-}}' or '{{-out-}}'
    kwDetectPaths: '{{-detect-paths-}}',

    // Escape mode: 'none', 'quotes', 'xml', 'html' (same as 'xml' + tab => &#9;)
    kwEscape: '{{-escape-}}',

    // The value is a flag (true/false) under kwFilesSkip or kwFilesTake key indicating an opposite match
    kwFilesIsNot: 'isNot',

    // The value is a flag (true/false) under kwFilesSkip or kwFilesTake indicating that the value under
    // kwFilesMask or kwFilesRegex should be treated as a filter for the full path rather than filename
    kwFilesIsPath: 'isPath',

    // The value is a glob pattern to match filename or full path against
    kwFilesMask: 'mask',

    // The value is a regular expression pattern to match filename or full path against
    kwFilesRegex: 'regex',

    // The value is a pattern to skip input file, must be a hash map comprising 'mask' (glob) or 'regex' as well as bollean flags for
    // 'isPath' (match full path rather than the filename with extension), 'isNot' (the opposite match), 
    kwFilesSkip: '{{-skip-}}',

    // Similar to '{{-skip-}}', but used to filter files from the '{{-inp-}}' which defined as a wider glob pattern
    kwFilesTake: '{{-take-}}',

    // Functions will be called under the value (hash map) for this key only
    kwFunc: '{{-func-}}',

    // Input file, allows glob patterns (will be expanded to the full path before command executrion)
    kwInp: '{{-inp-}}',

    // Input file directory path, gets calculated just before command execution
    kwInpDir: '{{-inp-dir-}}',

    // Input filename extension, gets calculated just before command execution
    // This element is used mainly to compose the output file path
    kwInpExt: '{{-inp-ext-}}',

    // Input filename without extension, gets calculated just before command execution
    // This element is used mainly to compose the output file path
    kwInpName: '{{-inp-name-}}',

    // Input filename with extension, gets calculated just before command execution
    // This element is used mainly to compose the output file path
    kwInpNameExt: '{{-inp-name-ext-}}',

    // Input file full path, gets calculated just before command execution
    // This element is used mainly to compose the output file path
    kwInpPath: '{{-inp-path-}}',

    // Input file sub-directory (relative to the current directory), gets calculated just before command execution
    // This element is used mainly to compose the output file path
    kwInpSubDir: '{{-inp-sub-dir-}}',

    // Input file sub-path (relative to the current directory), gets calculated just before command execution
    // This element is used mainly to compose the output file path
    kwInpSubPath: '{{-inp-sub-path-}}',

    // The value should represent explicit filename or file path
    // The content of that file will be embedded before the full application file parsing (similar to #include in C/C++)
    kwImport: '{{-import-}}',

    // Anything under the value (hash map) for this key will be processed just once (useful for initialisation)
    kwOnce: '{{-once-}}',

    // Output file path
    kwOut: '{{-out-}}',

    // Similar to cmd with the only difference that will be executed immediately without expecting 'inp' and/or 'out' to be defined
    // In this case, it is impossible to check whether the output file is up to date and no execution is required, unless forced
    kwRun: '{{-run-}}',

    // Stop execution immediately, the value under this key might be either null or a string to be displayed as an error message
    // The exit code will be 1 (failure)
    kwStop: '{{-stop-}}',

    // The path to this application's executable, similar to $~0
    kwThis: '{{-this-}}',

    // Conditional: if operator
    kwIf: '{{-if-}}',

    // Conditional: defines else-block (an array or a hash map)
    kwElse: '{{-else-}}',
  },

  // Function names (case-insensitive)

  functions: {
    fnAdd: '=Add',
    fnAddDays: '=AddDays',
    fnAddMonths: '=AddMonths',
    fnAddYears: '=AddYears',
    fnBaseName: '=BaseName',
    fnBaseNameNoExt: '=BaseNameNoExt',
    fnCeil: '=Ceil',
    fnCos: '=Cos',
    fnExp: '=Exp',
    fnDate: '=Date',
    fnDirName: '=DirName',
    fnDiv: '=Div',
    fnDivInt: '=IDiv',
    fnEndOfMonth: '=EndOfMonth',
    fnExtension: '=Extension',
    fnFileSize: '=FileSize',
    fnFloor: '=Floor',
    fnFullPath: '=FullPath',
    fnIif: '=Iif',
    fnIndex: '=Index',
    fnJoinPath: '=JoinPath',
    fnLastIndex: '=LastIndex',
    fnLastMatch: '=LastMatch',
    fnLastModified: '=LastModified',
    fnLn: '=Ln',
    fnLocal: '=Local',
    fnLower: '=Lower',
    fnMatch: '=Match',
    fnMax: '=Max',
    fnMin: '=Min',
    fnMod: '=Mod',
    fnMul: '=Mul',
    fnNow: '=Now',
    fnPi: '=Pi',
    fnRad: '=Rad',
    fnReplace: '=Replace',
    fnReplaceMatch: '=ReplaceMatch',
    fnRound: '=Round',
    fnRun: '=Run',
    fnStartOfMonth: '=StartOfMonth',
    fnSin: '=Sin',
    fnSqrt: '=Sqrt',
    fnSub: '=Sub',
    fnSubstr: '=Substr',
    fnTan: '=Sin',
    fnTime: '=Time',
    fnTitle: '=Title',
    fnToday: '=Today',
    fnTrim: '=Trim',
    fnTrimLeft: '=TrimLeft',
    fnTrimRight: '=TrimRight',
    fnUpper: '=Upper',
    fnUtc: '=Utc',
    fnWhich: '=Which',
 },
}